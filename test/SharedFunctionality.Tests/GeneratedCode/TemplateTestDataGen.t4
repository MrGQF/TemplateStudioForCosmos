<#@ assembly name="System.Core" #>
<#@ import namespace="System.IO" #>
// <auto-generated>
// This file was created from a T4 template.
// Any manual changes will be overwritten.
// </auto-generated>
using System.Collections.Generic;

namespace <#= outputNamespace #>
{
    public partial class TemplateJsonValidationTests
    {
        public static IEnumerable<object[]> GetAllRelativeTemplateJsonFiles()
        {
<# 

// The following excludes the catalog and project folders, but they only contain a single template file each
var subFoldersOfInterest = new[] { "_comp", "Features", "Pages", "Services", "Testing" };

foreach (var folder in subFoldersOfInterest)
{
    var folderPath = Path.Combine(root, folder);

    string absPath = string.Empty;

    try     
    {
        absPath = this.Host.ResolvePath(folderPath);
    }
    catch
    {
        continue;
    }

    var relPath = Path.GetFullPath(this.Host.ResolvePath(@"..\..\..\"));   

    if (Directory.Exists(absPath))
    {
        foreach (var file in new DirectoryInfo(absPath).GetFiles("template.json", SearchOption.AllDirectories))
        { #>
             yield return new object[] { @"<#= file.FullName.Replace(relPath, @"..\..\") #>" };
<#
        }
    }
}
#>
        }
    }
}
